{"version":3,"sources":["GlobalStyles.js","Movie.js","Loader.js","UpButton.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","MovieBlock","styled","div","MovieArticle","article","MoviePoster","PosterImage","img","MovieData","dl","MovieTitle","dt","MovieYear","dd","MovieGenres","MovieRating","Stars","span","MovieSummary","SummaryButton","button","Movie","year","title","summary","poster","genres","rating","fiveStarRating","integer","Math","floor","decimal","fullStars","emptyStars","count","i","push","useState","leftSummary","setLeftSummary","src","alt","join","map","star","index","key","slice","length","onClick","LoadingCircle","Loader","Button","UpButton","window","scrollTo","top","left","behavior","className","Container","section","Movies","App","loading","setLoading","movies","setMovies","getMovies","a","axios","get","data","useEffect","then","scroll","setScroll","addEventListener","scrollY","movie","id","medium_cover_image","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8838f569.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;400;500;700&display=swap');\n  \n  body {\n    background: #eff3f7;\n    height: 100%;\n    font-family: 'Noto Sans JP', sans-serif;\n  }\n  \n  body * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  \n  ul {\n    list-style: none;\n  }\n  \n  button {\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nexport default GlobalStyle;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport { IoIosStar, IoIosStarOutline, IoIosStarHalf, IoIosMore } from \"react-icons/io\";\n\nconst MovieBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin: 0 2% 70px;\n  border-radius: 6px;\n  background: #fff;\n  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.3);\n  transition: all 250ms ease-in-out;\n  &:hover{\n    transform: translateY(-10px);\n    box-shadow: 0 18px 32px -5px rgba(50, 50, 93, 0.6);\n  }         \n              \n  @media only screen and (min-width: 900px) {\n    width: 46%;\n    margin-bottom: 100px;\n  }\n`;\n\nconst MovieArticle = styled.article`\n  width: 92%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst MoviePoster = styled.div`\n  position: relative;\n  min-width: 80px;\n  height: auto;\n  margin-right: 6%;\n  @media only screen and (min-width: 480px) {\n    min-width: 120px;\n  }\n  @media only screen and (min-width: 768px) {\n    min-width: 150px;\n  }\n  @media only screen and (min-width: 900px) {\n    min-width: 120px;\n  }\n  @media only screen and (min-width: 1200px) {\n    min-width: 150px;\n  }\n`;\n\nconst PosterImage = styled.img`\n  position: absolute;\n  top: -30px;\n  width: 100%;\n  height: auto;\n  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.5);\n`;\n\nconst MovieData = styled.dl`\n  flex-grow: 1;\n  padding: 3% 0;\n`;\n\nconst MovieTitle = styled.dt`\n  font-weight: 700;\n  @media only screen and (min-width: 480px) {\n    font-size: 15px;\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media only screen and (min-width: 900px) {\n    font-size: 15px;\n  }\n  @media only screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nconst MovieYear = styled.dd`\n  margin-bottom: 5px;\n  font-size: 15px;\n  font-weight: 300;\n`;\n\nconst MovieGenres = styled.dd`\n  opacity: 0.8;\n  font-size: 15px;\n  font-weight: 400;\n`;\n\nconst MovieRating = styled.dd`\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n\nconst Stars = styled.span`\n  margin-right: 5px;\n  font-size: 15px;\n  color: #ffc700;\n`;\n\nconst MovieSummary = styled.dd`\n  font-size: 12px;\n  font-weight: 300;\n  color: gray;\n  @media only screen and (min-width: 480px) {\n    font-size: 14px;\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  @media only screen and (min-width: 900px) {\n    font-size: 14px;\n  }\n  @media only screen and (min-width: 1200px) {\n    font-size: 16px;\n  }   \n`;\n\nconst SummaryButton = styled.button`\n  position: relative;\n  top: 5px;\n  left: 10px;\n  width: 40px;\n  height: 20px;\n  border: none;\n  border-radius: 10px;\n  font-size: 20px;\n  color: gray;\n  background-color: #efefef;\n`;\n\nfunction Movie({ year, title, summary, poster, genres, rating }) {\n\n    // 별점 기준 : 정수와 상관없이 소수점이 0.5가 넘으면 0.5로, 0.5가 안되면 0.0으로 취급한다. 예) 4.75 -> 4.5, 3.2 -> 3.0\n    const fiveStarRating = (rating/2);\n    const integer = Math.floor(fiveStarRating);\n    const decimal = ((fiveStarRating * 10) % 10 >= 5);\n\n    let fullStars = [];\n    let emptyStars = [];\n    const count = decimal ? integer + 1 : integer;\n\n    for (let i = 0; i < integer; i++){\n        fullStars.push('');\n    }\n    for (let i = 0; i < (5 - count); i++) {\n        emptyStars.push('');\n    }\n\n    const [leftSummary, setLeftSummary] = useState(false);\n    const onClick = () => {\n        setLeftSummary(!leftSummary);\n    }\n\n    return(\n        <MovieBlock>\n            <MovieArticle>\n                <MoviePoster>\n                    <PosterImage src={poster} alt={title} title={title} />\n                </MoviePoster>\n                <MovieData>\n                    <MovieTitle>{title}</MovieTitle>\n                    <MovieYear>{year}</MovieYear>\n                    <MovieGenres>{genres.join(', ')}</MovieGenres>\n                    <MovieRating>\n                        <Stars>\n                            {fullStars.map((star, index) => (<IoIosStar key={index} />))}\n                            {decimal && <IoIosStarHalf />}\n                            {emptyStars.map((star, index) => (<IoIosStarOutline key={index} />))}\n                        </Stars>\n                        <strong>\n                            {rating}\n                        </strong>\n                    </MovieRating>\n                    <MovieSummary>\n                        <p>\n                            <span>{summary.slice(0, 200)}</span>\n                            {summary.length > 200 && !leftSummary &&\n                                <SummaryButton onClick={onClick}>\n                                    <IoIosMore />\n                                 </SummaryButton>}\n                            {leftSummary && summary.slice(201)}\n                        </p>\n                    </MovieSummary>\n                </MovieData>\n            </MovieArticle>\n        </MovieBlock>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { CgSpinner } from \"react-icons/cg\";\n\nconst LoadingCircle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  color: #000;\n  font-size: 60px;\n  animation-name: loading;\n  animation-duration: 500ms;\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  \n  @keyframes loading {\n    from {\n      transform: rotate(0);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nfunction Loader() {\n    return (\n        <LoadingCircle>\n            <CgSpinner />\n        </LoadingCircle>\n    );\n}\n\nexport default Loader;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { HiArrowCircleUp } from \"react-icons/hi\";\n\nconst Button = styled.button`\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: none;\n  font-size: 60px;\n  color: #bac8ff;\n  background-color: #fff;\n  transition: box-shadow 150ms ease-in-out;\n  & .icon {\n    position: absolute;\n    top: -10px;\n    left: -10px;\n  }\n  &:hover {\n    box-shadow: 0 5px 10px -2px rgba(50, 50, 93, 0.9);\n  }\n`;\n\nfunction UpButton() {\n\n    const onClick = () => {\n        window.scrollTo({top: 0, left: 0, behavior: 'smooth'});\n    }\n\n    return (\n        <Button onClick={onClick} >\n            <HiArrowCircleUp className=\"icon\" />\n        </Button>\n    );\n}\n\nexport default UpButton;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport GlobalStyle from \"./GlobalStyles\";\nimport Movie from \"./Movie\";\nimport Loader from \"./Loader\";\nimport UpButton from \"./UpButton\";\n\nconst Container = styled.section`\n  margin-top: 100px;\n`;\n\nconst Movies = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  const getMovies = async() => {\n      const {data: {data: { movies }}} = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=like_count');\n      setMovies(movies);\n      setLoading(false);\n  }\n\n  useEffect(() => {\n      getMovies().then();\n  }, []);\n\n  const [scroll, setScroll] = useState(false);\n  window.addEventListener('scroll', () => {\n      window.scrollY > 500 ? setScroll(true) : setScroll(false);\n  });\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Container>\n          {loading\n              ? <Loader />\n              : <Movies>\n                  {movies.map(movie => (\n                      <Movie key={movie.id}\n                             id={movie.id}\n                             year={movie.year}\n                             title={movie.title}\n                             rating={movie.rating}\n                             summary={movie.summary}\n                             poster={movie.medium_cover_image}\n                             genres={movie.genres} />\n                  ))}\n              </Movies>\n          }\n      </Container>\n      {scroll && <UpButton />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}